{"version":3,"sources":["jquery.fitvids.js","alvdev-search.js","alvdev-tests.js","infinite-scroll.js"],"names":["$","fn","fitVids","options","head","div","settings","customSelector","ignore","document","getElementById","getElementsByTagName","createElement","innerHTML","appendChild","childNodes","extend","this","each","selectors","ignoreList","push","$allVideos","find","join","not","aspectRatio","videoName","$this","parents","length","tagName","toLowerCase","parent","css","isNaN","attr","parseInt","height","width","_count","wrap","removeAttr","window","jQuery","Zepto","GhostFinder","input","showResult","contentApiKey","excerpt_length","singleResultTemplate","searchBtn","querySelector","searchInput","menu","searchResult","closeResults","addEventListener","e","preventDefault","stopImmediatePropagation","classList","add","style","display","focus","target","closest","closeActions","key","value","remove","question","choices","Array","from","querySelectorAll","let","currentQuestion","acceptingAnswers","questionCounter","score","availableQuestions","questions","choice1","choice2","choice3","choice4","answer","CORRECT_BONUS","MAX_QUESTIONS","startGame","console","log","getNewQuestion","questionIndex","Math","floor","random","innerText","forEach","choice","number","dataset","feedElement","buffer","ticking","loading","lastScrollY","lastWindowHeight","lastDocumentHeight","nextElement","onPageLoad","status","removeEventListener","onScroll","onResize","response","item","importNode","resNextElement","href","documentElement","scrollHeight","onUpdate","xhr","XMLHttpRequest","responseType","open","send","requestTick","requestAnimationFrame","scrollY","innerHeight","passive"],"mappings":"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","file":"casper.js","sourcesContent":["/*jshint browser:true */\n/*!\n* FitVids 1.3\n*\n*\n* Copyright 2017, Chris Coyier + Dave Rupert + Ghost Foundation\n* This is an unofficial release, ported by John O'Nolan\n* Credit to Thierry Koblentz - http://www.alistapart.com/articles/creating-intrinsic-ratios-for-video/\n* Released under the MIT license\n*\n*/\n\n;(function( $ ){\n\n  'use strict';\n\n  $.fn.fitVids = function( options ) {\n    var settings = {\n      customSelector: null,\n      ignore: null\n    };\n\n    if(!document.getElementById('fit-vids-style')) {\n      // appendStyles: https://github.com/toddmotto/fluidvids/blob/master/dist/fluidvids.js\n      var head = document.head || document.getElementsByTagName('head')[0];\n      var css = '.fluid-width-video-container{flex-grow: 1;width:100%;}.fluid-width-video-wrapper{width:100%;position:relative;padding:0;}.fluid-width-video-wrapper iframe,.fluid-width-video-wrapper object,.fluid-width-video-wrapper embed {position:absolute;top:0;left:0;width:100%;height:100%;}';\n      var div = document.createElement(\"div\");\n      div.innerHTML = '<p>x</p><style id=\"fit-vids-style\">' + css + '</style>';\n      head.appendChild(div.childNodes[1]);\n    }\n\n    if ( options ) {\n      $.extend( settings, options );\n    }\n\n    return this.each(function(){\n      var selectors = [\n        'iframe[src*=\"player.vimeo.com\"]',\n        'iframe[src*=\"youtube.com\"]',\n        'iframe[src*=\"youtube-nocookie.com\"]',\n        'iframe[src*=\"kickstarter.com\"][src*=\"video.html\"]',\n        'object',\n        'embed'\n      ];\n\n      if (settings.customSelector) {\n        selectors.push(settings.customSelector);\n      }\n\n      var ignoreList = '.fitvidsignore';\n\n      if(settings.ignore) {\n        ignoreList = ignoreList + ', ' + settings.ignore;\n      }\n\n      var $allVideos = $(this).find(selectors.join(','));\n      $allVideos = $allVideos.not('object object'); // SwfObj conflict patch\n      $allVideos = $allVideos.not(ignoreList); // Disable FitVids on this video.\n\n      $allVideos.each(function(){\n        var $this = $(this);\n        if($this.parents(ignoreList).length > 0) {\n          return; // Disable FitVids on this video.\n        }\n        if (this.tagName.toLowerCase() === 'embed' && $this.parent('object').length || $this.parent('.fluid-width-video-wrapper').length) { return; }\n        if ((!$this.css('height') && !$this.css('width')) && (isNaN($this.attr('height')) || isNaN($this.attr('width'))))\n        {\n          $this.attr('height', 9);\n          $this.attr('width', 16);\n        }\n        var height = ( this.tagName.toLowerCase() === 'object' || ($this.attr('height') && !isNaN(parseInt($this.attr('height'), 10))) ) ? parseInt($this.attr('height'), 10) : $this.height(),\n            width = !isNaN(parseInt($this.attr('width'), 10)) ? parseInt($this.attr('width'), 10) : $this.width(),\n            aspectRatio = height / width;\n        if(!$this.attr('name')){\n          var videoName = 'fitvid' + $.fn.fitVids._count;\n          $this.attr('name', videoName);\n          $.fn.fitVids._count++;\n        }\n        $this.wrap('<div class=\"fluid-width-video-container\"><div class=\"fluid-width-video-wrapper\"></div></div>').parent('.fluid-width-video-wrapper').css('padding-top', (aspectRatio * 100)+'%');\n        $this.removeAttr('height').removeAttr('width');\n      });\n    });\n  };\n\n  // Internal counter for unique video names.\n  $.fn.fitVids._count = 0;\n\n// Works with either jQuery or Zepto\n})( window.jQuery || window.Zepto );\n","new GhostFinder({\n  input: '#search-input',\n  showResult: '#search-result',\n  contentApiKey: '8f8b77ced0e6b2f4552ad98eb9',\n  excerpt_length: 150,\n  singleResultTemplate: `\n      <li>\n        ##primary_tag_name\n        <h4><a href=\"##url\">##title</a></h4>\n        <p>##excerpt</p>\n      </li>\n    `,\n});\n\nconst searchBtn = document.querySelector('#search-btn');\nconst searchInput = document.querySelector('#search-input');\nconst menu = document.querySelector('.gh-head-menu');\nconst searchResult = document.querySelector('#search-result');\n\nsearchBtn.addEventListener('click', e => {\n  e.preventDefault();\n  e.stopImmediatePropagation();\n  searchInput.classList.add('opened');\n  menu.style.display = 'none';\n  searchInput.focus();\n\n  closeResults();\n});\n\nconst closeResults = () => {\n  document.addEventListener('click', e => {\n    if (\n      !e.target.closest('.search-results-wrapper') &&\n      !e.target.closest('#search-input')\n    )\n      closeActions();\n  });\n\n  document.addEventListener('keydown', e => {\n    if (e.key === 'Escape') closeActions();\n  });\n};\n\nconst closeActions = () => {\n  searchInput.value = '';\n  searchInput.classList.remove('opened');\n  menu.style.display = 'flex';\n  searchResult.innerHTML = '';\n};\n","const question = document.querySelector('#question');\nconst choices = Array.from(document.querySelectorAll('.choice-text'));\n\nlet currentQuestion = {};\nlet acceptingAnswers = true;\nlet questionCounter = 0;\nlet score = 0;\nlet availableQuestions = [];\n\nlet questions = [\n  {\n    question: 'This is the first question',\n    choice1: 'Choice 1 to first question',\n    choice2: 'Choice 2 to first question',\n    choice3: 'Choice 3 to first question',\n    choice4: 'Choice 4 to first question',\n    answer: 3,\n  },\n  {\n    question: 'This is the second question',\n    choice1: 'Choice 1 to second question',\n    choice2: 'Choice 2 to second question',\n    choice3: 'Choice 3 to second question',\n    choice4: 'Choice 4 to second question',\n    answer: 4,\n  },\n  {\n    question: 'This is the third question',\n    choice1: 'Choice 1 to third question',\n    choice2: 'Choice 2 to third question',\n    choice3: 'Choice 3 to third question',\n    choice4: 'Choice 4 to third question',\n    answer: 2,\n  },\n  {\n    question: 'This is the fourth question',\n    choice1: 'Choice 1 to fourth question',\n    choice2: 'Choice 2 to fourth question',\n    choice3: 'Choice 3 to fourth question',\n    choice4: 'Choice 4 to fourth question',\n    answer: 1,\n  },\n];\n\n// Constants\nconst CORRECT_BONUS = 10;\nconst MAX_QUESTIONS = 3;\n\nstartGame = () => {\n  questionCounter = 0;\n  score = 0;\n  availableQuestions = [...questions];\n  console.log(availableQuestions);\n  getNewQuestion();\n};\n\ngetNewQuestion = () => {\n  questionCounter++;\n  const questionIndex = Math.floor(Math.random() * availableQuestions.length);\n  currentQuestion = availableQuestions[questionIndex];\n  question.innerText = currentQuestion.question;\n\n  choices.forEach(choice => {\n    const number = choice.dataset['number'];\n    choice.innerText = currentQuestion['choice' + number];\n  });\n};\n\nstartGame();\n","/* eslint-env browser */\n\n/**\n * Infinite Scroll\n * Used on all pages where there is a list of posts (homepage, tag index, etc).\n *\n * When the page is scrolled to 300px from the bottom, the next page of posts\n * is fetched by following the the <link rel=\"next\" href=\"...\"> that is output\n * by {{ghost_head}}.\n *\n * The individual post items are extracted from the fetched pages by looking for\n * a wrapper element with the class \"post-card\". Any found elements are appended\n * to the element with the class \"post-feed\" in the currently viewed page.\n */\n\n(function (window, document) {\n    // next link element\n    var nextElement = document.querySelector('link[rel=next]');\n    if (!nextElement) {\n        return;\n    }\n\n    // post feed element\n    var feedElement = document.querySelector('.post-feed');\n    if (!feedElement) {\n        return;\n    }\n\n    var buffer = 300;\n\n    var ticking = false;\n    var loading = false;\n\n    var lastScrollY = window.scrollY;\n    var lastWindowHeight = window.innerHeight;\n    var lastDocumentHeight = document.documentElement.scrollHeight;\n\n    function onPageLoad() {\n        if (this.status === 404) {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n            return;\n        }\n\n        // append contents\n        var postElements = this.response.querySelectorAll('article.post-card');\n        postElements.forEach(function (item) {\n            // document.importNode is important, without it the item's owner\n            // document will be different which can break resizing of\n            // `object-fit: cover` images in Safari\n            feedElement.appendChild(document.importNode(item, true));\n        });\n\n        // set next link\n        var resNextElement = this.response.querySelector('link[rel=next]');\n        if (resNextElement) {\n            nextElement.href = resNextElement.href;\n        } else {\n            window.removeEventListener('scroll', onScroll);\n            window.removeEventListener('resize', onResize);\n        }\n\n        // sync status\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        ticking = false;\n        loading = false;\n    }\n\n    function onUpdate() {\n        // return if already loading\n        if (loading) {\n            return;\n        }\n\n        // return if not scroll to the bottom\n        if (lastScrollY + lastWindowHeight <= lastDocumentHeight - buffer) {\n            ticking = false;\n            return;\n        }\n\n        loading = true;\n\n        var xhr = new window.XMLHttpRequest();\n        xhr.responseType = 'document';\n\n        xhr.addEventListener('load', onPageLoad);\n\n        xhr.open('GET', nextElement.href);\n        xhr.send(null);\n    }\n\n    function requestTick() {\n        ticking || window.requestAnimationFrame(onUpdate);\n        ticking = true;\n    }\n\n    function onScroll() {\n        lastScrollY = window.scrollY;\n        requestTick();\n    }\n\n    function onResize() {\n        lastWindowHeight = window.innerHeight;\n        lastDocumentHeight = document.documentElement.scrollHeight;\n        requestTick();\n    }\n\n    window.addEventListener('scroll', onScroll, {passive: true});\n    window.addEventListener('resize', onResize);\n\n    requestTick();\n})(window, document);\n"]}